{% extends 'base.html.twig' %}

{% block title %}{% endblock %}

{% block body %}
	<h1>Test du module stripe</h1>
	<form action="{{ path("subscription_paiement", {'id': product.id}) }}" method="post" id="payment-form">
		<div class="form-row">
			<div id="card-elements"></div>

			<div id="card-errors" role="alert"></div>
		</div>
		<button class="btn btn-primary mt-4">
			Acheter
			{{ product.price }}
			€
		</button>
	</form>
{% endblock %}

{% block javascript %}
	<script>
		{% if app_environnement =='dev' %}
var stripeToken ="{{ stripe_public_key_test }}"
{% else %}
var stripeToken ="{{ stripe_public_key_live }}"{% endif %}var stripe = Stripe(stripeToken);
var elements = stripe.elements();
var subscriptiuon = "{{ product.id }}";
var clientSecret = "{{ intentSecret }}";
var cardholderName = "{{ app/user.lastname }}";
var cardholderEmail = "{{ app/user.email }}";

    console.log('Result paymentItent', clientSecret);

var styleCustom = {
base: {
fontSize: '16px',
color: '#25332d'
}
}

// Création du form 
var card = elements.create('card', {style: styleCustom});
card.mount('#card-elements');

// Message d'erreur
card.addEventListener('change', function (event) {
var displayError = document.getElementById('card-errors');
if(event.error) {
    displayError.textContent = event.error.message;
} else {
    displayError.textContent = "";
}
});

var form = document.getElementById('payment-form');

form.addEventListener('submit', function(event) {
    event.preventDefault();

    stripe.handleCardPayment(
        clientSecret, 
        card,
        {
            payment_method_data: {
                billing_details: {
                    name: cardholderName,
                    email: cardholderemail
                }
            }
        }
    ).then(result => {
        if(result.error) {
            //erreur
        } else if('paymentItent' in result) {
            console.log('Result :', result);
            stripeTokenHandler(result.paymentIntent);
            console.log('Result paymentItent :', result.paymentIntent);
        }
    })
});

function stripeTokenHandler(intent) {
    var form = document.getElementById('payment-form');
    var InputIntentId = document.createElement('input');
    var InputItentPaymentMethod = document.createElement('input');
    var InputItentStatus = document.createElement('input');
    var InputSubscription =  document.createElement('input');

    InputIntentId.setAttribute('type','hidden');
    InputIntentId.setAttribute('name', 'stripeIntentId');
    InputIntentId.setAttribute('value', intent.id);
    
    InputItentPaymentMethod.setAttribute('type','hidden');
    InputItentPaymentMethod.setAttribute('name', 'stripeIntentPaymentMethod');
    InputItentPaymentMethod.setAttribute('value', intent.payment_method);
    
    InputItentStatus.setAttribute('type','hidden');
    InputItentStatus.setAttribute('name', 'stripeIntentStatus');
    InputItentStatus.setAttribute('value', intent.status);
    
    InputSubscription.setAttribute('type','hidden');
    InputSubscription.setAttribute('name', 'subscription');
    InputSubscription.setAttribute('value', subscription);

    form.appendChild(InputIntentId);
    form.appendChild(InputItentPaymentMethod);
    form.appendChild(InputItentStatus);
    form.appendChild(InputSubscription);
    form.submit();
}


	</script>
{% endblock %}
